name: 🚀 Staplify CI/CD

on:
  push:
    branches: ['**']
  pull_request:
    branches: [main]

# 🔐 PERMISSIONS
permissions:
  contents: read
  packages: write

jobs:
  validate:
    name: ✅ Validate Code
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js & Yarn
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'yarn'

      - name: 📋 Install dependencies
        run: yarn install --frozen-lockfile

      - name: 🎨 Lint code
        run: yarn lint

      - name: 🔍 Type check
        run: yarn check-types

      - name: 🧪 Run tests
        run: yarn test

      - name: 🏗️ Test build
        if: github.ref == 'refs/heads/main'
        run: yarn build

  build:
    name: 🐳 Build Docker Image
    runs-on: ubuntu-latest
    needs: validate
    if: github.ref == 'refs/heads/main' # SEULEMENT branche main

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4

      - name: 🐳 Setup Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: 🔐 Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: 🏷️ Generate image tags
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=raw,value=latest

      - name: 🚀 Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  deploy:
    name: 🌐 Deploy to Production
    runs-on: ubuntu-latest
    needs: [validate, build]
    if: github.ref == 'refs/heads/main' # SEULEMENT branche main

    steps:
      - name: 🚀 Deploy to Lightsail
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.LIGHTSAIL_HOST }}
          username: ${{ secrets.LIGHTSAIL_USER }}
          key: ${{ secrets.LIGHTSAIL_SSH_KEY }}
          script: |
            # 📍 Se placer dans le dossier app
            cd /opt/staplify

            # 🔐 Login GitHub Container Registry
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

            # 📦 Pull nouvelle image
            docker pull ghcr.io/${{ github.repository }}:latest

            # 🛑 Stop ancienne version
            docker stop staplify-app || true
            docker rm staplify-app || true

            # 🚀 Start nouvelle version
            docker run -d \
              --name staplify-app \
              --restart unless-stopped \
              -p 80:3000 \
              ghcr.io/${{ github.repository }}:latest

            # 🧹 Cleanup
            docker image prune -f

            # ✅ Health check
            sleep 15
            curl -f http://localhost || echo "App starting up..."
